# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: DockerCompose@0
  displayName: Run services
  inputs:
    dockerComposeFile: 'docker-compose.yml'
    action: 'Run services'
    detached: true
- script: |
    docker exec vuejs-frontend npm run test:unit
  displayName: 'Client tests: Run unit tests'
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'
- script: |
    cd client
    npm install
    npm run test:e2e
    cd ..
  displayName: 'Client tests: Run e2e tests'
- script: |
    docker exec nestjs-backend npm run test
  displayName: 'Backend tests: Run jest tests'
- script: |
    cd server/test/postman
    npm install -g newman
    newman run pm-tests-skeleton.json -e pm-tests-skeleton-environment.json --reporters cli, junit --reporter-junit-export Results\junitReport.xml
  displayName: 'Backend api tests: Run Postman tests'